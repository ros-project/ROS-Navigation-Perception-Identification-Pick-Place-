<launch>
<!--   ebot -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ebot_description)/urdf/ebot_ur5.xacro'"/>
   
<!--   ur5 world -->
	<include file="$(find ebot_gazebo)/launch/packaging_assist.launch" />

	<arg name="x" default="0"/>
	<arg name="y" default="0"/>
	<arg name="z" default="0"/>
	<arg name="r" default="0"/>
	<arg name="p" default="0"/>
	<arg name="ya" default="0"/>		

<!-- Spawn the ur5 robot model -->
	<node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model"  
	    args="-urdf -param robot_description -model ebot -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg r) -P $(arg p) -Y $(arg ya)" />

	<node pkg="move_base" type="move_base" respawn="false" name="move_base" >

<rosparam file="$(find final_task)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
<rosparam file="$(find final_task)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
<rosparam file="$(find final_task)/config/local_costmap_params.yaml" command="load" />
<rosparam file="$(find final_task)/config/global_costmap_params.yaml" command="load" />
<rosparam file="$(find final_task)/config/trajectory_planner.yaml" command="load" />
<param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="1.0"/>
<param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="1.0"/>

</node>

<!-- include your navigation launch file  -->		
 <include file="$(find final_task)/launch/office_world_map.launch" /> 
 <include file="$(find final_task)/launch/amcl.launch" /> 

<!-- include the moveit launch file and node for pick and place using perception-->

 <include file="$(find task4_moveit)/launch/moveit_config.launch" />

<node pkg="final_task" name="navigation" type="navigation.py" output="screen">
</node>

</launch>
